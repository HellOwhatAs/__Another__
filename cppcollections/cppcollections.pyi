from typing import List,overload

class QueueInt:
    @overload
    def __init__(self):...
    @overload
    def __init__(self,other:QueueInt):...
    def push(self,elem:int)->None:...
    def pop(self)->None:...
    def empty(self)->bool:...
    def back(self)->int:...
    def front(self)->int:...
    def size(self)->int:...
    def __len__(self)->int:...
    def swap(self,other:QueueInt)->None:...
    def __str__(self)->str:...

class Priority_Queue_Max:
    @overload
    def __init__(self):...
    @overload
    def __init__(self,other:Priority_Queue_Max):...
    def from_vector(self,vec:list)->None:...
    def empty(self)->bool:...
    def push(self,elem:int)->None:...
    def pop()->None:...
    def top()->int:...
    def size(self)->int:...
    def __len__(self)->int:...
    def swap(self,other:Priority_Queue_Max)->None:...
class Priority_Queue_Min:
    @overload
    def __init__(self):...
    @overload
    def __init__(self,other:Priority_Queue_Min):...
    def from_vector(self,vec:list)->None:...
    def empty(self)->bool:...
    def push(self,elem:int)->None:...
    def pop()->None:...
    def top()->int:...
    def size(self)->int:...
    def __len__(self)->int:...
    def swap(self,other:Priority_Queue_Min)->None:...

class bxjj:
    length:int
    def __init__(self,length:int):...
    def hb(self,a:int,b:int)->None:...
    def cha(self,a:int,b:int)->bool:...
    def result(self)->List[List[int]]:...
    def father(self,x:int)->int:...
    def __str__(self)->str:...
    def __len__(self)->int:...